.. warning::    This module is **OBSOLETE** and is only provided on PyPI to support old    projects that still use it. Please **DO NOT USE IT FOR NEW PROJECTS!**    Use modern alternatives like the `multiprocessing <https://docs.python.org/3/library/multiprocessing.html>`_    module in the standard library or even an asynchroneous approach with    `asyncio <_asyncio: https://docs.python.org/3/library/asyncio.html>`_.A thread pool is an object that maintains a pool of worker threads to performtime consuming operations in parallel. It assigns jobs to the threadsby putting them in a work request queue, where they are picked up by thenext available thread. This then performs the requested operation in thebackground and puts the results in another queue.The thread pool object can then collect the results from all threads fromthis queue as soon as they become available or after all threads havefinished their work. It's also possible, to define callbacks to handleeach result as it comes in... note::    This module is regarded as an extended example, not as a finished product.    Feel free to adapt it too your needs.


